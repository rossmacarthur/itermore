name: build

on: [push, pull_request]

jobs:

  # ---------------------------------------------------------------------------
  # Lint
  # ---------------------------------------------------------------------------

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [stable, beta, nightly]

    env:
      RUSTFLAGS: --deny warnings

    steps:
    - uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.toolchain }}
        components: clippy, rustfmt

    - name: Rustfmt
      run: cargo fmt -- --check

    - name: Clippy
      continue-on-error: ${{ matrix.toolchain == 'nightly' }}
      run: cargo clippy --workspace --all-targets --features full

    - uses: extractions/setup-crate@v1
      with:
        owner: taiki-e
        name: cargo-hack

    - name: Check (each feature)
      run: cargo hack check --each-feature --no-dev-deps


  # ---------------------------------------------------------------------------
  # Test
  # ---------------------------------------------------------------------------

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Test
        run: cargo test --workspace --features full

  # ---------------------------------------------------------------------------
  # Miri
  # ---------------------------------------------------------------------------

  miri:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri

      - name: Test
        run: cargo miri test --workspace --features full

  # ---------------------------------------------------------------------------
  # MSRV
  # ---------------------------------------------------------------------------

  msrv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.65

      - name: Test
        run: cargo test --features full
        env:
          RUSTFLAGS: --deny warnings

  # ---------------------------------------------------------------------------
  # Check READMEs
  # ---------------------------------------------------------------------------

  readme:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-onedoc
      run: cargo install cargo-onedoc --locked

    - name: Check READMEs
      run: |
        cargo onedoc --check
        cargo onedoc --check --package arrays
        cargo onedoc --check --package iterchunks
        cargo onedoc --check --package iterwindows
